name: release artifacts
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  linux:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.2.5
      with:
        version: 0.7.0

    - run: mkdir zkg-${{ matrix.arch }}-linux

    - name: ${{ matrix.arch }}-linux
      run: zig build -Dtarget=${{ matrix.arch }}-linux -Drelease-safe --prefix zkg-${{ matrix.arch }}-linux

    - name: Create Tarball
      run: tar -czvf zkg-${{ matrix.arch }}-linux.tar.gz zkg-${{ matrix.arch }}-linux

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./zkg-${{ matrix.arch }}-linux.tar.gz
        asset_name: zkg-${{ matrix.arch }}-linux.tar.gz
        asset_content_type: application/tarball

  windows:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.2.5
      with:
        version: 0.7.0

    - run: mkdir zkg-${{ matrix.arch }}-windows

    - name: ${{ matrix.arch }}-windows
      run: zig build -Dtarget=${{ matrix.arch }}-windows-gnu -Drelease-safe --prefix zkg-${{ matrix.arch }}-windows

    - name: Create Tarball
      run: tar -czvf zkg-${{ matrix.arch }}-windows.tar.gz zkg-${{ matrix.arch }}-windows

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./zkg-${{ matrix.arch }}-windows.tar.gz
        asset_name: zkg-${{ matrix.arch }}-windows.tar.gz
        asset_content_type: application/tarball

  bsd:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        os: [freebsd, dragonfly, netbsd, openbsd]
        arch: [x86_64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.2.5
      with:
        version: 0.7.0

    - run: mkdir zkg-${{ matrix.arch }}-${{ matrix.os }}

    - name: ${{ matrix.arch }}-${{ matrix.os }}
      run: zig build -Dtarget=${{ matrix.arch }}-${{ matrix.os }}-gnu -Drelease-safe --prefix zkg-${{ matrix.arch }}-${{ matrix.os }}

    - name: Create Tarball
      run: tar -czvf zkg-${{ matrix.arch }}-${{ matrix.os }}.tar.gz zkg-${{ matrix.arch }}-${{ matrix.os }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./zkg-${{ matrix.arch }}-${{ matrix.os }}.tar.gz
        asset_name: zkg-${{ matrix.arch }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/tarball
